name: Run Python ETL Scripts

on:
  push:
    branches:
      - main # Trigger on pushes to the 'main' branch
  schedule:
    - cron: '0 2 * * *' # Example: Run daily at 2 AM UTC. Adjust as needed.
  workflow_dispatch: # Allows manual triggering from the GitHub Actions tab

jobs:
  run-scripts:
    runs-on: ubuntu-latest # Use a Linux runner for the job
    permissions:
      contents: 'read' # Required for checkout

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Action to checkout your code from the repository

    - name: Set up Google Cloud Service Account Key
      # This step creates a JSON key file from a GitHub Secret and sets
      # the GOOGLE_APPLICATION_CREDENTIALS environment variable.
      # IMPORTANT: Store your Google Cloud Service Account Key JSON as a GitHub Secret
      # named GOOGLE_CREDENTIALS.
      run: |
        echo "${{ secrets.GOOGLE_CREDENTIALS }}" > gcloud-key.json
        echo "GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcloud-key.json" >> $GITHUB_ENV
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }} # This secret holds your service account key JSON

    - name: Set up Python
      # Sets up a Python environment on the runner.
      uses: actions/setup-python@v5
      with:
        python-version: '3.x' # Specify the Python version you are using (e.g., '3.9', '3.10', '3.11')

    - name: Install dependencies
      # Installs all Python packages listed in your requirements.txt file.
      # Assumes requirements.txt is in the root of your repository or the 'trendyol-etl' directory.
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt # Adjust path if requirements.txt is elsewhere

    - name: Run orders.py
      # Executes the orders.py script.
      # Environment variables are passed securely using GitHub Secrets.
      # Ensure these secrets are configured in your GitHub repository settings.
      env:
        TRENDYOL_API_TOKEN: ${{ secrets.TRENDYOL_API_TOKEN }}
        TRENDYOL_SUPPLIER_ID: ${{ secrets.TRENDYOL_SUPPLIER_ID }}
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }} # Still needed if your script uses os.getenv directly
      run: python trendyol-etl/orders.py

    - name: Run products.py
      # Executes the products.py script.
      env:
        TRENDYOL_API_TOKEN: ${{ secrets.TRENDYOL_API_TOKEN }}
        TRENDYOL_SUPPLIER_ID: ${{ secrets.TRENDYOL_SUPPLIER_ID }}
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      run: python trendyol-etl/products.py

    - name: Run settlements.py
      # Executes the settlements.py script.
      env:
        TRENDYOL_API_TOKEN: ${{ secrets.TRENDYOL_API_TOKEN }}
        TRENDYOL_SUPPLIER_ID: ${{ secrets.TRENDYOL_SUPPLIER_ID }}
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      run: python trendyol-etl/settlements.py

    - name: Run otherfinancials.py
      # Executes the otherfinancials.py script.
      env:
        TRENDYOL_API_TOKEN: ${{ secrets.TRENDYOL_API_TOKEN }}
        TRENDYOL_SUPPLIER_ID: ${{ secrets.TRENDYOL_SUPPLIER_ID }}
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      run: python trendyol-etl/otherfinancials.py
